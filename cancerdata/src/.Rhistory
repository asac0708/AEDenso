source('config.R')
source('config.R')
setwd("C:/Users/prestamour/Documents/GitHub/AEDenso")
source('config.R')
source('reader/reader.R')
source('preprocessor/etl.R')
setwd("C:/Users/prestamour/Documents/GitHub/AEDenso/cancerdata/src")
source('config.R')
source('reader/reader.R')
setwd("C:/Users/prestamour/Documents/GitHub/AEDenso/cancerdata/src")
getwd()
source('config.R')
getwd()
source('config.R')
install.packages("FactoClass")
source('config.R')
source('reader/reader.R')
View(data_cancer)
source('preprocessor/etl.R')
View(base_cancer)
source('visualizator/descriptive.R')
Total_Females <- ggplot(base_cancer, aes(y = Total, x = Females)) +
geom_point() +
labs(title = "Total_Females",
x = "Females",
y = "Total") +
xlim(c(0, 5000)) +
ylim(c(0, 5000))
Total_Males <- ggplot(base_cancer, aes(y = Total, x = Males)) +
geom_point() +
labs(title = "Total_Males",
x = "Males",
y = "Total") +
xlim(c(0, 2500)) +
ylim(c(0, 5000))
Total_Whites <- ggplot(base_cancer, aes(y = Total, x = Whites)) +
geom_point() +
labs(title = "Total_Whites",
x = "Whites",
y = "Total") +
xlim(c(0, 5000)) +
ylim(c(0, 5000))
Total_Blacks <- ggplot(base_cancer, aes(y = Total, x = Blacks)) +
geom_point() +
labs(title = "Total_Blacks",
x = "Blacks",
y = "Total") +
xlim(c(0, 5000)) +
ylim(c(0, 5000))
Male_Female <- ggplot(base_cancer, aes(x = Males, y = Females)) +
geom_point() +
labs(title = "Male_Female",
x = "Males",
y = "Females") +
theme_minimal() +
xlim(c(0, 1000)) +
ylim(c(0, 1000))
Black_White <- ggplot(base_cancer, aes(x = Whites, y = Blacks)) +
geom_point() +
labs(title = "Black_White",
x = "Whites",
y = "Blacks") +
theme_minimal() +
xlim(c(0, 2000)) +
ylim(c(0, 2500))
View(Black_White)
ggplot(base_cancer, aes(y = Total, x = Females)) +
geom_point() +
labs(title = "Total_Females",
x = "Females",
y = "Total") +
xlim(c(0, 5000)) +
ylim(c(0, 5000))
ggplot(base_cancer, aes(y = Total, x = Males)) +
geom_point() +
labs(title = "Total_Males",
x = "Males",
y = "Total") +
xlim(c(0, 2500)) +
ylim(c(0, 5000))
ggplot(base_cancer, aes(y = Total, x = Males)) +
geom_point() +
labs(title = "Total_Males",
x = "Males",
y = "Total") +
xlim(c(0, 2500)) +
ylim(c(0, 5000))
ggplot(base_cancer, aes(y = Total, x = Whites)) +
geom_point() +
labs(title = "Total_Whites",
x = "Whites",
y = "Total") +
xlim(c(0, 5000)) +
ylim(c(0, 5000))
ggplot(base_cancer, aes(x = Males, y = Females)) +
geom_point() +
labs(title = "Male_Female",
x = "Males",
y = "Females") +
theme_minimal() +
xlim(c(0, 1000)) +
ylim(c(0, 1000))
ggplot(base_cancer, aes(x = Whites, y = Blacks)) +
geom_point() +
labs(title = "Black_White",
x = "Whites",
y = "Blacks") +
theme_minimal() +
xlim(c(0, 2000)) +
ylim(c(0, 2500))
model1 <- lm(data = base_cancer,
Total ~ Females + Males + Blacks + Whites)
summary(model1)
source('config.R')
install.packages("FactoMineR")
source('config.R')
install.packages("aplpack")
source('config.R')
install.packages("plotly")
source('reader/reader.R')
View(data_cancer)
source('preprocessor/etl.R')
View(base_cancer2)
View(data_cancer2)
View(data_cancer)
View(base_cancer)
View(arbol)
base_cancer <- data_cancer[, 2:8] # Quitando la columna de las jurisdicciones
rownames(base_cancer) <- data_cancer$Jurisdiction # Cambiarle el nombre a las filas
base_cancer <- base_cancer[-1, ] #Quitandole variables que alteran los resultados
data_cancer <- data_cancer[-1, ] #Quitandole variables que alteran los resultados
rownames(base_cancer) <- data_cancer$Jurisdiction # Cambiarle el nombre a las filas
pca <- PCA(base_cancer) # Cuantas dimensiones queremos obtener
pca$eig
plot(pca$eig[,1], pch = 20, type = 'b')
pca$var$cor
pca$var$contrib
plot(pca$var$cos2)
pca$ind$contrib
distancias <- dist(pca$var$coord)
arbol <- hclust(distancias)
plot(arbol)
Total_Males <- table(base_cancer$Total, base_cancer$Males)
source('config.R')
install.packages("lmtest")
